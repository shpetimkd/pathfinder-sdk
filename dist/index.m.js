import t from"isomorphic-unfetch";function r(){return r=Object.assign?Object.assign.bind():function(t){for(var r=1;r<arguments.length;r++){var o=arguments[r];for(var e in o)Object.prototype.hasOwnProperty.call(o,e)&&(t[e]=o[e])}return t},r.apply(this,arguments)}function o(t,r){return o=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,r){return t.__proto__=r,t},o(t,r)}var e=/*#__PURE__*/function(t){function r(r){var o;return(o=t.call(this,r)||this).config=void 0,o.config=r,o}var e,n;return n=t,(e=r).prototype=Object.create(n.prototype),e.prototype.constructor=e,o(e,n),r.prototype.getPath=function(){return this.config},r}(/*#__PURE__*/function(){function o(t){this.apiKey=void 0,this.baseUrl=void 0,this.apiKey=t.apiKey,this.baseUrl=t.baseUrl||"https://jsonplaceholder.typicode.com"}return o.prototype.request=function(o,e){var n=""+this.baseUrl+o,i=r({},e,{headers:{"Content-Type":"application/json","api-key":this.apiKey}});return t(n,i).then(function(t){if(t.ok)return t.json();throw new Error(t.statusText)})},o}()),n=function(t){this.pathFinder=void 0,this.pathFinder=new e(t)};export{n as Library};
